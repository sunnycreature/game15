.App {
  text-align: center;
}

.App-logo {
  animation: App-logo-spin infinite 20s linear;
  height: 80px;
}

.App-header {
  background-color: rgb(23, 78, 80);
  height: 60px;
  padding: 20px;
  color: rgb(164, 211, 212);
}

.App-title {
  font-size: 1.5em;
}

.App-intro {
  font-size: large;
}

@keyframes App-logo-spin {
  from { transform: rotate(0deg); }
  to { transform: rotate(360deg); }
}

.Field {
  display: flex;
  flex-direction: column;
  flex-wrap: nowrap;
  justify-content: center;
  align-items: stretch;
  align-content: center;
  border: 8px solid #222222;
  border-radius: 10px;
  background-color: rgb(23, 78, 80);
  padding: 4px;

  /* Borders
  border-width:1px;
  border-style:solid;
  border-left-color:#777;
  border-right-color:#777;
  border-top-color:#999;
  border-bottom:4px solid #555; */
}

.Line {
  display: flex;
  flex-direction: row;
  flex-wrap: nowrap;
  justify-content: center;
  align-items: stretch;
  align-content: center;
}

.Cell {
  padding: 2px;
  width: 100px;
  height: 100px;
  font-size: xx-large;
  text-align: center;
  background-color:cadetblue;
  border: 1px solid black;
  border-radius: 10px;
  background: -webkit-gradient(linear, 0 0, 0 100%, from(rgb(164, 211, 212)), to(cadetblue), color-stop(1,cadetblue));
  text-shadow:0px -1px 1px rgba(255,255,255,0.5);
  display: flex;
}
.Cell span {
  width: 100px;
  margin: auto;
}

.Cell.Empty {
  background: none;
  border: 1px;
  border-style:solid;
  border-color: transparent;
  color: rgb(23, 78, 80);
  text-shadow: 0 0 0;
}
.Cell.Paused {
  text-shadow: 0 0 0;
  color:rgb(35, 118, 121);
  background: -webkit-gradient(linear, 0 0, 0 100%, from(cadetblue), to(rgb(35, 118, 121)), color-stop(1,rgb(35, 118, 121)));
}
.Cell.Empty.Paused {
  background: none;
}

.NewGameButton {
  cursor: default;
  background-color:cadetblue;
  border: 1px solid black;
  border-radius: 4px;
  padding: 4px;
  background: -webkit-gradient(linear, 0 0, 0 100%, from(rgb(164, 211, 212)), to(rgb(164, 211, 212)), color-stop(0.5,cadetblue));
  text-shadow:0px -1px 1px rgba(255,255,255,0.5);
  /* Borders*/
  border-width:1px;
  border-style:solid;
  border-left-color:#777;
  border-right-color:#777;
  border-top-color:#999;
  border-bottom:2px solid #555;
  float: left;
  width: 86px;
  margin-bottom: 6px;
}

.panelInfo {
  position: relative;
  float: left;
  margin-left: 20px;
  margin-top: 20px;

}
.ConnectedField {
  position: relative;
  float: left;
}
.panelGame {
  margin: 50px;
  position: relative;
  float: left;

}
.panelTimer {
  position: absolute;
  top: 240px;
  text-align: left;
  width: 200px;
}

.TimerGame.NoneDisplay {
  display: none;
}
.panelBtn {
  float: left;
  position: absolute;
  margin-bottom: 10px;
  width: 100px;
  top: 160px;
}

.display_none {
  display: none;
  }
.panelOptions {
  text-align: left;
  margin-bottom: 20px;
  float: left;
  width: 100%;
}
.radio {
  margin-top: 4px;
  padding-left: 6px;
}
.Cell1 span{
  border-bottom: 60px solid red;
	border-left: 14px solid transparent;
	border-right: 14px solid transparent;
	height: 0;
	width: 60px;
}
.Cell2 span{
	width: 80px;
	height: 80px;
	background: yellow;
	-moz-border-radius: 40px;
	-webkit-border-radius: 40px;
	border-radius: 40px;
}
.Cell3 span{
	width: 80px;
	height: 80px;
	background: green;
}
.Cell4 span{
	width: 0;
	height: 0;
	border-left: 40px solid transparent;
	border-right: 40px solid transparent;
	border-bottom: 80px solid blue;
}
.Cell1.Paused span{
  border-bottom-color: rgb(35, 118, 121);
}
.Cell2.Paused span{
	background: rgb(35, 118, 121);
}
.Cell3.Paused span{
	background:rgb(35, 118, 121);
}
.Cell4.Paused span{
	border-bottom-color: rgb(35, 118, 121);
}
.Cell.Empty span{
  background: none;
  border: 1px;
  border-style:solid;
  border-color: transparent;
  color: rgb(23, 78, 80);
  text-shadow: 0 0 0;

}
.CellP {
  background-image: url("./img/img2.png");
}

.CellP2 {
  background-image: url("./img/img1.png");
}

.optionWH input {
  width: 24px;
  float: right;
  margin-left: 4px;
}
.InputComponent {
  margin-top: 10px;
  margin-right: 10px;
}
.InputComponent span {

}